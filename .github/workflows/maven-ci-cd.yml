name: Java CI/CD with Maven, Docker, and AWS ECR/ECS

on:
  push:
    branches: [ "master", "staging" ]
  pull_request:
    branches: [ "master", "staging" ]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

  build_push_ecr_deploy_ecs:
    name: Build, Push to ECR & Deploy to ECS
    needs: build_and_test
    # Run on push to master or staging branches
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract Docker metadata for ECR
        id: meta_ecr
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}
          tags: |
            # For production: <short-sha> and latest
            # For staging: staging-<short-sha> and staging-latest
            type=sha,prefix=${{ github.ref_name == 'staging' && 'staging-' || '' }},format=short
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
            type=raw,value=staging-latest,enable=${{ github.ref_name == 'staging' }}

      - name: Build and push Docker image to ECR
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta_ecr.outputs.tags }}
          labels: ${{ steps.meta_ecr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Render Amazon ECS task definition
        id: render-ecs-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ vars.ECS_TASK_DEFINITION_FILE }}
          container-name: ${{ vars.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.digest }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-ecs-task-def.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE_NAME }}
          cluster: ${{ vars.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true